### python中的UUID字符串

#### 4种生成uuid的方式
在平时开发开发过程中总是会需要有唯一性的字符串来标志一些资源，可以使用uuid。uuid在RFC4122中制定规范，uuid1()、uuid3()、uuid4()、uuid5()也是根据这套规范中的1、3、4、5版本而来。

python中有四种产生uuid方式，不过实现方式也并不相同。

*  uuid.uuid1()

    直接看源码中的文档注释，已经很直白了。利用主机ID、序列号和当前时间生成一个UUID，如果参数 node 没有给定，会调用 getnode() 来获取硬件地址。如果参数中指定了 clock_seq ，使用参数中给定的时钟序列作为序列号，否则使用一个随机的14位长的序列号。

```
        """Generate a UUID from a host ID, sequence number, and the current time.
        If 'node' is not given, getnode() is used to obtain the hardware
        address.  If 'clock_seq' is given, it is used as the sequence number;
        otherwise a random 14-bit sequence number is chosen."""

```

*  uuid.uuid3()

    通过计算名字和命名空间的MD5散列值得到，保证了同一命名空间中不同名字的唯一性，
    和不同命名空间的唯一性，但同一命名空间的同一名字生成相同的uuid。 
 
```
    """Generate a UUID from the MD5 hash of a namespace UUID and a name."""
```

*  uuid.uuid４()

    生成一个随机数，不过在计算机中没有真正的随机数，是会有概率重复的！！！
     
```
    """Generate a random UUID."""
```

*  uuid.uuid5()

    和uuid3类似，使用了SHA-1算法
 
```
    """Generate a UUID from the SHA-1 hash of a namespace UUID and a name."""
```

#### 命名空间

使用uuid3或uuid5时，需要传入命名空间参数，uuid.uuid3(namespace, name)

* *uuid.NAMESPACE_DNS*

当指定该命名空间时，参数 name 是一个域名

* *uuid.NAMESPACE_URL*

当指定该命名空间时，参数 name 是一个URL

* *uuid.NAMESPACE_OID*

当指定该命名空间时，参数 name 是一个ISO OID

* *uuid.NAMESPACE_X500*

当指定该命名空间时，参数 name 是一个DER格式或文本格式的X.500 DN。

#### 代码
调用方式也很简单：
```python
    import uuid
    print uuid.uuid1()
    print uuid.uuid3(uuid.NAMESPACE_DNS, 'test_name')
    print uuid.uuid4()
    print uuid.uuid5(uuid.NAMESPACE_URL, 'test_name')
        
```
不推荐uuid4()，他只是个伪随机数


 
